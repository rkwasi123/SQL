# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL.



CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL );

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

SELECT*
FROM Spotifydata;

-- 1 What is the average danceability by artist and track? 
SELECT
    artist_name,
    track_name,
    AVG(danceability) AS avg_danceability
FROM Spotifydata
GROUP BY  artist_name,track_name;

-- 2  Who are the top 10 artists based on popularity? 
SELECT
    artist_name,
    popularity,
    track_name
FROM Spotifydata
ORDER BY popularity DESC
LIMIT 10;

-- 3 What artist released the longest song? 
SELECT
    artist_name,
    track_name,
    duration_ms
FROM Spotifydata
ORDER BY duration_ms DESC
LIMIT 1;

-- 4 What's the average danceability for the 10 most popular songs?
SELECT
    AVG(danceability) AS Avg_Danceability_tOP_10
FROM (
    SELECT danceability 
    FROM Spotifydata
    ORDER BY popularity DESC
LIMIT 10
) AS top_10;

-- 5 Number of Songs Per Artist
SELECT
    artist_name,
    COUNT(*) AS Count_songs
FROM Spotifydata
GROUP BY artist_name
ORDER BY count_songs DESC;

-- 6 Which songs have both high valence and high danceability?
SELECT
    track_name,
    valence,
    danceability
FROM Spotifydata
WHERE valence > 0.07 AND danceability > 0.07;

--7 Find the most common song key used in tracks
SELECT
    song_key,
    COUNT(*) AS occurences
FROM Spotifydata
GROUP BY song_key
ORDER BY occurences DESC
LIMIT 1;
